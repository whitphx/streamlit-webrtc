name: Test and Build

on:
  push:
    branches:
      - main
      - develop/**
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop/**

permissions: {}

jobs:
  set-build-info:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.build-info.outputs.branch }}
      tag: ${{ steps.build-info.outputs.tag }}
      trigger-sha: ${{ steps.build-info.outputs.trigger-sha }}
      head-sha: ${{ steps.build-info.outputs.head-sha }}
      pr-number: ${{ steps.build-info.outputs.pr-number }}
    steps:
      - name: Save build info (pull_request)
        if: github.event_name == 'pull_request'
        run: |
          echo "${{ github.event.pull_request.head.ref }}" > branch
          echo "" > tag
          echo "${{ github.event.pull_request.head.sha }}" > head-sha
          echo "${{ github.sha }}" > trigger-sha
          echo "${{ github.event.pull_request.number }}" > pr-number
      - name: Save build info (push, branch)
        if: github.event_name == 'push' && github.ref_type == 'branch'
        run: |
          echo "${{ github.ref_name }}" > branch
          echo "" > tag
          echo "${{ github.sha }}" > head-sha
          echo "${{ github.sha }}" > trigger-sha
          echo "" > pr-number
      - name: Save build info (push, tag)
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: |
          echo "" > branch
          echo "${{ github.ref_name }}" > tag
          echo "${{ github.sha }}" > head-sha
          echo "${{ github.sha }}" > trigger-sha
          echo "" > pr-number
      - name: Output build info
        id: build-info
        run: |
          echo "branch=$(cat branch)" >> $GITHUB_OUTPUT
          echo "tag=$(cat tag)" >> $GITHUB_OUTPUT
          echo "trigger-sha=$(cat trigger-sha)" >> $GITHUB_OUTPUT
          echo "head-sha=$(cat head-sha)" >> $GITHUB_OUTPUT
          echo "pr-number=$(cat pr-number)" >> $GITHUB_OUTPUT
      - name: Upload build info
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-info
          path: |
            branch
            tag
            head-sha
            trigger-sha
            pr-number

  test-python:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        streamlit-version: [null]
        include:
          # Test with streamlit <1.4.0 and >=1.4.0. See https://github.com/whitphx/streamlit-webrtc/issues/598
          - python-version: 3.9
            streamlit-version: 1.0.0
          - python-version: 3.9
            streamlit-version: 1.4.0
          # Test with streamlit >=1.6.0. See https://github.com/whitphx/streamlit-webrtc/issues/709
          - python-version: 3.9
            streamlit-version: 1.6.0
          # Test with streamlit >=1.8.0. See https://github.com/whitphx/streamlit-webrtc/issues/759
          - python-version: 3.9
            streamlit-version: 1.8.0
          # Test with streamlit >=1.12.0. See https://github.com/whitphx/streamlit-webrtc/issues/1004
          - python-version: 3.9
            streamlit-version: 1.12.0
          # Test with streamlit >=1.12.1. See https://github.com/whitphx/streamlit-webrtc/issues/1024
          - python-version: 3.9
            streamlit-version: 1.12.1
          # Test with streamlit >=1.14.0. See https://github.com/whitphx/streamlit-webrtc/pull/1189
          - python-version: 3.9
            streamlit-version: 1.14.0
          # Test with streamlit >=1.18.0. See https://github.com/whitphx/streamlit-webrtc/issues/1187
          - python-version: 3.9
            streamlit-version: 1.18.0
          # Test with streamlit >=1.27.0. See https://github.com/whitphx/streamlit-webrtc/pull/1393
          - python-version: 3.9
            streamlit-version: 1.27.0
          # Test with streamlit >=1.34.0. See https://github.com/whitphx/streamlit-webrtc/pull/1627
          - python-version: 3.9
            streamlit-version: 1.34.0

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Install uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Install a specific version of Streamlit
      if: ${{ matrix.streamlit-version }}
      run: uv add --dev streamlit=="${STREAMLIT_VERSION}" setuptools
      env:
        STREAMLIT_VERSION: ${{ matrix.streamlit-version }}

    - name: Run Ruff
      run: |
        uv run ruff check --output-format=github .
        uv run ruff format . --check

    - name: Type checking with mypy
      run: uv run mypy .

    - name: Release check
      run: uv run scripts/release_check.py streamlit_webrtc/component.py

    # The frontend build directory is necessary to import the package
    # avoiding an error from `components.declare_component`.
    - name: Create a mock frontend build directory
      run: mkdir streamlit_webrtc/frontend/dist

    - name: Test with pytest
      run: uv run pytest

  test-frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: streamlit_webrtc/frontend

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      name: Install pnpm
      with:
        version: 10
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        cache: 'pnpm'
        node-version-file: .nvmrc
        cache-dependency-path: streamlit_webrtc/frontend/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - run: pnpm run lint

    - run: pnpm run build

    - run: pnpm test

  build:
    needs: [test-python, test-frontend]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
        fetch-depth: 0  # Fetch all history for hatch-vcs to get the correct version

    - name: Install uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0

    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version-file: "pyproject.toml"

    - name: Install Python dependencies
      run: uv sync --all-extras --dev

    # Set up frontend dependencies
    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      name: Install pnpm
      with:
        version: 10
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        cache: 'pnpm'
        node-version-file: .nvmrc
        cache-dependency-path: streamlit_webrtc/frontend/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install
      working-directory: streamlit_webrtc/frontend

    - name: Build
      run: make build

    - name: Upload the built artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: streamlit-webrtc-${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || github.sha  }}
        path: dist

  docs-build:
    needs: [test-python, test-frontend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - run: uv run mkdocs build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          # Upload entire repository
          path: './site'

  docs-deploy:
    needs: docs-build
    if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
