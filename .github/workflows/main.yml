name: Test, Build, and Publish

on:
  push:
    branches:
      - main
      - develop/**
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop/**

permissions: {}

jobs:
  test-python:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        streamlit-version: [null]
        include:
          # Test with streamlit <1.4.0 and >=1.4.0. See https://github.com/whitphx/streamlit-webrtc/issues/598
          - python-version: 3.9
            streamlit-version: 1.0.0
          - python-version: 3.9
            streamlit-version: 1.4.0
          # Test with streamlit >=1.6.0. See https://github.com/whitphx/streamlit-webrtc/issues/709
          - python-version: 3.9
            streamlit-version: 1.6.0
          # Test with streamlit >=1.8.0. See https://github.com/whitphx/streamlit-webrtc/issues/759
          - python-version: 3.9
            streamlit-version: 1.8.0
          # Test with streamlit >=1.12.0. See https://github.com/whitphx/streamlit-webrtc/issues/1004
          - python-version: 3.9
            streamlit-version: 1.12.0
          # Test with streamlit >=1.12.1. See https://github.com/whitphx/streamlit-webrtc/issues/1024
          - python-version: 3.9
            streamlit-version: 1.12.1
          # Test with streamlit >=1.14.0. See https://github.com/whitphx/streamlit-webrtc/pull/1189
          - python-version: 3.9
            streamlit-version: 1.14.0
          # Test with streamlit >=1.18.0. See https://github.com/whitphx/streamlit-webrtc/issues/1187
          - python-version: 3.9
            streamlit-version: 1.18.0
          # Test with streamlit >=1.27.0. See https://github.com/whitphx/streamlit-webrtc/pull/1393
          - python-version: 3.9
            streamlit-version: 1.27.0
          # Test with streamlit >=1.34.0. See https://github.com/whitphx/streamlit-webrtc/pull/1627
          - python-version: 3.9
            streamlit-version: 1.34.0

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.6.6"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Install a specific version of Streamlit
      if: ${{ matrix.streamlit-version }}
      run: uv pip install streamlit=="${STREAMLIT_VERSION}" setuptools
      env:
        STREAMLIT_VERSION: ${{ matrix.streamlit-version }}

    - name: Run Ruff
      run: |
        uv run ruff check --output-format=github .
        uv run ruff format . --check

    - name: Type checking with mypy
      run: |
        uv run mypy .

    - name: Release check
      run: uv run scripts/release_check.py streamlit_webrtc/component.py

    # Frontend build is necessary for the package to be importable, in the tests
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 10
        run_install: false
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'pnpm'
        node-version-file: .nvmrc
        cache-dependency-path: streamlit_webrtc/frontend/pnpm-lock.yaml
    - name: Install dependencies
      run: pnpm install
      working-directory: streamlit_webrtc/frontend
    - name: Build the frontend
      run: pnpm run build
      working-directory: streamlit_webrtc/frontend

    - name: Test with pytest
      run: |
        uv run pytest

  test-frontend:
    permissions:
      contents: read

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: streamlit_webrtc/frontend

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 10
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'pnpm'
        node-version-file: .nvmrc
        cache-dependency-path: streamlit_webrtc/frontend/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - name: Lint
      run: |
        pnpm run check:eslint
        pnpm run check:prettier

    - run: pnpm run build

    - run: pnpm test

  build:
    needs: [test-python, test-frontend]

    permissions:
      contents: read

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.6.6"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Python dependencies
      run: uv sync --all-extras --dev

    # Set up frontend dependencies
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 10
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'pnpm'
        node-version-file: .nvmrc
        cache-dependency-path: streamlit_webrtc/frontend/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install
      working-directory: streamlit_webrtc/frontend

    - name: Build
      run: make pkg/build

    - name: Upload the built artifacts
      uses: actions/upload-artifact@v4
      if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
      with:
        path: dist
        name: streamlit-webrtc-${{ github.sha }}

    - name: Upload the built artifacts (when pushed with a version tag)
      uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        path: dist
        name: streamlit-webrtc-${{ github.ref_name }}

  publish:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [build]

    permissions:
      contents: write  # Necessary for creating releases: https://github.com/softprops/action-gh-release#permissions

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - uses: actions/download-artifact@v4
      with:
        name: streamlit-webrtc-${{ github.ref_name }}
        path: dist

    - name: Publish
      run: uv publish

    - name: Create a new release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
